#!/bin/sh{{! Templated With Moustache. Reset Template Engine Delimiters to some that won't interfere with BASH }}{{=<% %>=}}
#PBS -q <%queue.name%>
#PBS -N <%JobHandle%>
#PBS -l walltime=00:<%runminutes%>:00
#PBS -l nodes=<%nodes%>:ppn=<%ppn%><%#queue.node_properties%>:<%.%><%/queue.node_properties%>
#PBS -o scheduler_stdout.txt
#PBS -e scheduler_stderr.txt
#PBS -W umask=0007
<%#env_vars_string %>
#PBS -v <%env_vars_string%>
<%/env_vars_string %>
<%#job_status_email%>
#PBS -M <%job_status_email%>
#PBS -m ae
<%/job_status_email%>
<%#account%>
#PBS -A <%account%>
<%/account%>

function exit_trap() {
	date '+%s' > exit.txt
	qstat -f $PBS_JOBID > qstat_dump.txt
}

source /etc/profile.d/modules.sh


<%# cluster_header %>
#execute a per-cluster header
<% cluster_header %>
#End per-cluster header
<%/ cluster_header %>

cd <%jobdir%>

#setup signal handlers
set -m
set -b

trap "exit_trap INT" EXIT SIGINT
trap "exit_trap TERM" SIGTERM

date "+%s" > start.txt

export CIPRES_THREADSPP=<%threads_per_process%>
export CIPRES_NP=<%mpi_processes%>

(./batch_command.cmdline 1>stdout.txt 2>stderr.txt)&
SUBJOBPID=$!
wait ${SUBJOBPID} #signal handlers might interrupt this, in that case, they execute between this and the next line.

date "+%s" > done.txt
kill -s TERM ${SUBJOBPID} 2>/dev/null 1>/dev/null 
wait ${SUBJOBPID}
